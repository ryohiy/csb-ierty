{"version":3,"sources":["src/index.js"],"names":["val2","val3","val4","name","age","console","log","val5","push","message1","message2"],"mappings":";AAeA,IAAIA,EAAO,QAILC,EAAO,UAGPC,EAAO,CACXC,MAAM,MAII,UAHVC,IAAK,GAIPF,OAAc,UACdG,QAAQC,IAAIJ,GAGZ,IAAMK,EAAO,CAAC,MAAO,OAErBA,EAAK,GAAK,OACVA,EAAKC,KAAK,UACVH,QAAQC,IAAIC,GAOZ,IAAMJ,EAAO,MACPC,EAAM,GAINK,EAAW,QAAUN,EAAO,SAAWC,EAAM,KAK7CM,EAAmBP,QAAAA,OAAAA,EAAaC,UAAAA,OAAAA,EAAtC,MACAC,QAAQC,IAAII","file":"src.54d21840.js","sourceRoot":"..","sourcesContent":["/**\n * const,letなどの変数宣言\n */\n\n// var val1 = \"var変数\";\n\n// console.log(val1);\n\n// // var変数は上書き可能\n// val1= \"var変数を上書き\";\n// console.log(val1)\n// //var変数は再宣言可能\n// var val1 = \"再宣言\";\n// console.log(val1);\n\nlet val2 = \"let変数\";\n\n//letは上書きは出来るけど、再宣言は不可\n\nconst val3 = \"const変数\";\n//constは上書きも出来ないし、再宣言も出来ない\n\nconst val4 = {\n  name: \"ryo\",\n  age: 24\n};\n\nval4.name = \"tanaka\";\nval4.addres = \"nagano\";\nconsole.log(val4);\n//constで定義したオブジェクトはプロパティの変更が可能\n\nconst val5 = [\"dog\", \"cat\"];\n\nval5[0] = \"bird\";\nval5.push(\"monkey\");\nconsole.log(val5);\n//constで定義した配列はプロパティの変更が可能\n// Reactでは、変数定義は基本constで行う\n\n/**\n * テンプレート文字列\n */\nconst name = \"ひよし\";\nconst age = 24;\n// 私の名前は日吉です。年齢は24さいです\n\n//従来の方法\nconst message1 = \"私の名前は\" + name + \"です。年齢は\" + age + \"です\";\n\n//→いちいち+記号でつなげるの面倒くさいよね？\n\n//テンプレート文字列！\nconst message2 = `私の名前は${name}です。年齢は${age}です`;\nconsole.log(message2);\n//この講義では,文字列の中でjsの変数を使うなら、テンプレート文字列を使ったほうが\n//すっきりするよね、との事。おれもそう思う。\n"]}